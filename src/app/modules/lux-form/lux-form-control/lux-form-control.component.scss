@mixin crop {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

@mixin bottomBorder {
  content: '';
  display: block;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  left: 0;
  right: 0;
  position: absolute;
  height: 2px;
}

:host {
  max-width: 100%;
  width: 100%;
  outline: none !important;
}

:-webkit-autofill {
  display: none !important;
}

.lux-form-control {
  display: flex;
  position: relative;
  box-sizing: border-box;

  .lux-form-control-label {
    padding: var(--lux-theme-form-control-label-padding);
    min-height: 15px;
    > * {
      @include crop;
    }
  }

  .lux-form-control-container {
    position: relative;
    box-sizing: border-box;
    min-height: var(--lux-theme-form-control-default-height-not-scalable);
    &:after {
      @include bottomBorder;
    }
  }

  .lux-form-control-misc {
    box-sizing: border-box;
    position: relative;
    margin: var(--lux-theme-form-control-misc-margin);
    min-height: 17px;
    word-wrap: break-word;
    > * {
      padding-top: 2px;
    }

    .lux-form-control-character-counter {
      color: var(--lux-theme-dark-secondary-text) !important;
      font-size: var(--lux-theme-form-control-font-size-small);
      text-align: end;
      min-width: 40px;
      margin-left: 2px;

      &:only-child {
        width: 100%;
      }
    }
  }

  ::ng-deep {
    // Umstylen des Standard-Aussehens von Inputs/Textareas
    input,
    textarea {
      font: inherit;
      background: 0 0;
      color: currentColor;
      border: none;
      outline: 0;
      padding: 0;
      margin: 0;
      width: 100%;
      max-width: 100%;
      vertical-align: bottom;
      text-align: inherit;
      font-size: var(--lux-theme-form-control-font-size);
    }

    textarea {
      // Hier wird explizit nicht die min-height auf die --lux-theme-form-control-height gesetzt,
      // da sonst die Höhe in Bezug auf minRows und maxRows falsch berechnet wird.
      // Damit der Abstand zwischen dem Text under unteren Border korrekt ist,
      // wird hier der Abstand angepasst.
      padding: 4px 0 6px 0;
      margin: -4px 0 0 0;
    }

    .lux-input-row {
      height: var(--lux-theme-form-control-height);
      font-size: var(--lux-theme-form-control-font-size);

      > * {
        height: 17px;
      }

      .lux-input-prefix-container,
      .lux-input-suffix-container {
        width: auto;
        white-space: nowrap;

        ::ng-deep {
          i,
          mat-icon {
            padding: 0 !important;
            margin: 0;
            font-size: 1em;
          }
        }
      }
    }

    // Toggle von Datepickern anpassen, um analog zu anderen Inputs auszusehen
    mat-datepicker-toggle {
      height: var(--lux-theme-form-control-height-small);

      button {
        height: var(--lux-theme-form-control-height-small);
        width: var(--lux-theme-form-control-height-small);
        
        .mat-button-wrapper {
          display: flex;
          height: var(--lux-theme-form-control-height-small);
          svg {
            height: var(--lux-theme-form-control-height-small);
            width: var(--lux-theme-form-control-height-small);
          }
          &:hover {
            background-color: var(--lux-theme-hover-color);
            border-radius: 4px;
          }
        }
      }
    }

    // Höhe des Toggle-Labels an andere Höhen angleichen
    mat-slide-toggle {
      height: auto;

      .mat-slide-toggle-label {
        line-height: var(--lux-theme-form-control-height-small);
        font-size: var(--lux-theme-form-control-font-size);
      }

      .mat-slide-toggle-content {
        white-space: normal;
      }
    }

    // Höhe des Checkbox-Labels an andere Höhen angleichen
    mat-checkbox {
      .mat-checkbox-label {
        line-height: var(--lux-theme-form-control-height-small);
        font-size: var(--lux-theme-form-control-font-size);
      }
    }

    // Höhe der Radio-Buttons etwas anheben
    mat-radio-button {
      height: var(--lux-theme-form-control-default-height-not-scalable);
      font-size: var(--lux-theme-form-control-font-size);

      .mat-radio-label {
        vertical-align: unset;
        align-items: end;
      }
    }

    // Anpassen des horizontalen Sliders
    mat-slider {
      &.mat-slider-horizontal {
        height: var(--lux-theme-form-control-default-height-not-scalable);
      }
    }

    // Feinjustierungen für Mat-Select
    mat-select {
      height: var(--lux-theme-form-control-height);
      .mat-select-trigger {
        line-height: var(--lux-theme-form-control-height-small);
        .mat-select-value {
          font-size: var(--lux-theme-form-control-font-size);
        }
      }
    }

    .lux-label,
    mat-hint,
    mat-error {
      font-size: var(--lux-theme-form-control-font-size-small) !important;
      line-height: 15px !important;
    }
  }
}

// Zusatzoptionen, basierend auf Klassen der Component
:host {
  &:not(.lux-form-control-scalable-height) {
    .lux-form-control-container {
      max-height: var(--lux-theme-form-control-default-height-not-scalable);
    }
  }

  &.lux-form-control-borderless {
    .lux-form-control-container {
      background: unset !important;
    }

    .lux-form-control-container:after {
      @include bottomBorder;
      border-bottom: none !important;
    }
  }

  &.lux-form-control-no-top-label { // für Toggle/Checkbox/Radio
    .lux-form-control {
      min-height: calc(var(--lux-theme-form-control-default-height-not-scalable) + 23px);
    }
    .lux-form-control-label {
      display: none;
    }
  }
  &.lux-form-control-no-bottom-label { // kein Misc
    .lux-form-control {
      min-height:  calc(var(--lux-theme-form-control-default-height-not-scalable) + 17px);;
    }
    .lux-form-control-misc {
      display: none !important;
    }
  }

  &.lux-form-control-no-labels { // kein Label und kein Misc
    .lux-form-control {
      min-height: var(--lux-theme-form-control-default-height-not-scalable);
    }
    .lux-form-control-label, .lux-form-control-misc {
      display: none !important;
    }
  }
}

::ng-deep {
  .lux-form-control-readonly, .lux-form-control-disabled {
    pointer-events: none;
    mat-select {
      &[aria-disabled="true"] ::ng-deep .mat-select-arrow {
        color: var(--lux-theme-dark-disabled-text);
      }
      &[aria-disabled="false"] ::ng-deep .mat-select-arrow {
        color:var(--lux-theme-dark-disabled-text);
      }
    }
  }
}
